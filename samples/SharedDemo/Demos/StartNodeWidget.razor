@using Blazor.Diagrams.Core.Models
@using Microsoft.AspNetCore.Components
@using SharedDemo.Demos

<div class="custom-node-top-container">
    <div class="start-node-wrapper default-node @(Node.Selected ? "selected" : "")" @onclick="ToggleDrawer">
        <div class="start-circle">
            <PortRenderer Port="Node.GetPort(PortAlignment.Right)">
                <circle cx="100" cy="50" r="6" fill="green" />
            </PortRenderer>

            <div class="start-icon">
                <img src="_content/SharedDemo/img/start_icon.svg" />
            </div>

            <i class="fa-solid fa-user" style="color: #b0b0b0;"></i>
        </div>

        <div class="start-labels">
            <div class="start-title">@Node.Title</div>
            <div class="start-subtitle">@Node.Subtitle</div>
        </div>
    </div>
</div>

@if (IsDrawerOpen)
{
    <div class="drawer-overlay">
        <div class="drawer-content">
            <h5 class="mb-3">Edit Node</h5>
            <div class="mb-3">
                <label>Title</label>
                <input class="form-control" @bind="Node.Title" />
            </div>
            <div class="mb-3">
                <label>Subtitle</label>
                <input class="form-control" @bind="Node.Subtitle" />
            </div>
            <button class="btn btn-danger mt-4" @onclick="() => IsDrawerOpen = false">Close</button>
        </div>
    </div>
}

@code {
    [Parameter] public StartNode Node { get; set; } = default!;
    private bool IsDrawerOpen = false;

    private void ToggleDrawer()
    {
        IsDrawerOpen = !IsDrawerOpen;
    }
}
